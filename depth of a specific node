struct node {
    int data;
    struct node *left;
    struct node *right;
};

struct node* createNode(int value) {
    struct node* newNode = (struct node*)malloc(sizeof(struct node));
    newNode->data = value;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

int findNodeDepth(struct node* root, int key, int level) {
    if (root == NULL) {
        return -1; // Node not found in tree
    }

    if (root->data == key) {
        return level;
    }

    int leftDepth = findNodeDepth(root->left, key, level + 1);
    if (leftDepth != -1) {
        return leftDepth;
    }

    return findNodeDepth(root->right, key, level + 1);
}

int main() {
    struct node* root = createNode(1);
    root->left = createNode(2);
    root->right = createNode(3);
    root->left->left = createNode(4);
    root->left->right = createNode(5);
    root->right->left = createNode(6);
    root->right->right = createNode(7);

    int key = 5;
    int depth = findNodeDepth(root, key, 0);

    if (depth != -1) {
        printf("Depth of node %d is %d\n", key, depth);
    } else {
        printf("Node not found in tree\n");
    }

    return 0;
}
